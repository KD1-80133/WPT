{"ast":null,"code":"var _jsxFileName = \"/home/sunbeam/Assignment/WPT_Assignment/MERN/react/myreactapp/src/Product.js\",\n  _s = $RefreshSig$();\n//  import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function Product() {\n//     const url = \"http://127.0.0.1:5000/product\";\n//     const [products, setProducts] = useState([]);\n//     const [AddRecords, setAddRecords] = useState(false);\n//     const [product ,setProduct]=useState({producttitle:\"\",price:\"\",stock:\"\"});\n//     const AddProduct = () => {\n//         setAddRecords(!AddRecords);\n//     };\n\n//     const RemovedRecord = (productid) => {\n//         const confirmation = window.confirm(\"Are you sure you want to delete this product?\");\n//         if (confirmation) {\n//             axios.delete(url + \"/\" + productid).then((result) => {\n//                 if (result.data.affectedRows !== undefined && result.data.affectedRows > 0) {\n//                     FetchRecord();\n//                 }\n//             });\n//         }\n//     };\n\n//     const FetchRecord = () => {\n//         axios.get(url).then((result) => {\n//             setProducts(result.data);\n//         });\n//     };\n\n//     const OnTextChange = (args) => {\n//         var product1 = { ...product };\n//         product1[args.target.name] = args.target.value;\n//         setProduct(product1);\n//     };\n\n//     const AddRecord = () => {\n//         const isAnyFieldNotEmpty = Object.values(product).some(value => value.trim() !== '');\n\n//         if (isAnyFieldNotEmpty) {\n//             alert('Please make sure all fields are blank before adding a new record.');\n//             return;\n//         }\n\n//         axios.post(url, product).then((result) => {\n//             if (result.data.affectedRows !== undefined && result.data.affectedRows > 0) {\n//                 setProduct({ producttitle: \"\", price: \"\", stock: \"\" }); \n//                 FetchRecord();\n//                 setAddRecords(false);\n//             }\n//         });\n//     };\n\n//     useEffect(() => {\n//         FetchRecord();\n//     }, []);\n\n//     return (\n//         <div className='container'>\n//             {!AddRecords ? (\n//                 <div className='table-responsive'>\n//                     <table className='table table-bordered'>\n//                         <thead>\n//                             <tr>\n//                                 <th>ProductID</th>\n//                                 <th>ProductTitle</th>\n//                                 <th>Price</th>\n//                                 <th>Stock</th>\n//                                 <th>Actions</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {products.map((product) => (\n//                                 <tr\n//                                     key={product.productid}\n//                                     className={product.stock === 0 ? 'table-danger' : 'table-info'}\n//                                 >\n//                                     <td>{product.productid}</td>\n//                                     <td>{product.producttitle}</td>\n//                                     <td>{product.price}</td>\n//                                     <td>{product.stock === 0 ? 'Not Available' : product.stock}</td>\n//                                     <td>\n//                                         <button className=\"btn btn-danger\" onClick={() => RemovedRecord(product.productid)}>Delete</button>\n//                                     </td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                     <button className=\"btn btn-primary\" onClick={AddProduct}>\n//                         Add Product\n//                     </button>\n//                 </div>\n//             ) : (\n//                 <div>\n//                     <h2>Add Product</h2>\n//                     <table className='table table-bordered'>\n//                         <tbody>\n//                             <tr>\n//                                 <td>Product Title:</td>\n//                                 <td>\n//                                     <input\n//                                         type=\"text\"\n//                                         name=\"producttitle\"\n//                                         value={product.producttitle}\n//                                         onChange={OnTextChange}\n//                                     />\n//                                 </td>\n//                             </tr>\n//                             <tr>\n//                                 <td>Price:</td>\n//                                 <td>\n//                                     <input\n//                                         type=\"text\"\n//                                         name=\"price\"\n//                                         value={product.price}\n//                                         onChange={OnTextChange}\n//                                     />\n//                                 </td>\n//                             </tr>\n//                             <tr>\n//                                 <td>Stock:</td>\n//                                 <td>\n//                                     <input\n//                                         type=\"text\"\n//                                         name=\"stock\"\n//                                         value={product.stock}\n//                                         onChange={OnTextChange}\n//                                     />\n//                                 </td>\n//                             </tr>\n//                             <tr>\n//                                 <td></td>\n//                                 <td>\n//                                     <button className=\"btn btn-primary\" onClick={AddRecord}>\n//                                         Add Record\n//                                     </button>\n//                                     <button className=\"btn btn-secondary\" onClick={AddProduct}>\n//                                         Cancel\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Product;\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./common.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Productlist() {\n  _s();\n  const [prods, setProds] = useState([]);\n  const [prod, setProd] = useState({\n    productid: \"\",\n    producttitle: \"\",\n    price: \"\",\n    stock: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const url = \"http://127.0.0.1:5000/product\";\n  const FetchRecords = () => {\n    axios.get(url).then(result => {\n      //debugger;\n      setProds(result.data);\n    });\n    // console.log(result.data);\n  };\n\n  const isValidDateValue = stock => {\n    if (stock === 0) {\n      return \"Not available\";\n    } else {\n      return stock;\n    }\n  };\n  useEffect(() => {\n    FetchRecords();\n  }, []);\n  useEffect(() => {\n    console.log(\"Some State change did update the UI\");\n  }, [prods, prod, message]);\n  //\n  const Remove = productid => {\n    if (window.confirm(\"Do you Really want to delete this row \" + productid)) {\n      // txt = \"You pressed OK!\";\n      axios.delete(url + \"/\" + productid).then(result => {\n        if (result.data.affectedRows !== undefined && result.data.affectedRows > 0) {\n          //ShowMessage(\"Record removed successfully!\");\n          FetchRecords();\n        }\n      });\n    } else {\n      // let txt = \"You\"\n    }\n  };\n  const Update = () => {\n    const updateurl = url + \"/\" + prod.productid;\n    console.log(updateurl);\n    console.log(prod);\n    axios.put(updateurl, prod).then(result => {\n      FetchRecords();\n    });\n  };\n  const OnTextChange = args => {\n    var prod1 = {\n      ...prod\n    };\n    prod1[args.target.name] = args.target.value;\n    setProd(prod1);\n  };\n  const Edit = productid => {\n    for (var i = 0; i < prods.length; i++) {\n      if (prods[i].productid === productid) {\n        var copyOfProdsToEdit = {\n          ...prods[i]\n        };\n        setProd(copyOfProdsToEdit);\n      }\n    }\n  };\n  const OnTextChangeValidation = args => {\n    var prod1 = {\n      ...prod\n    };\n    if (prod1.productid === 0 || prod1.producttitle === \"\" || prod1.price === \"\" || prod1.stock === \"\") {\n      debugger;\n      ShowMessage(\"Invalid Credentials\");\n      // console.log(\"hi im success\");\n    } else {\n      AddRecord();\n    }\n  };\n  const AddRecord = () => {\n    axios.post(url, prod).then(result => {\n      if (result.data.affectedRows !== undefined && result.data.affectedRows > 0) {\n        // ClearBoxes();\n        // ShowMessage(\"Record added successfully!\");\n        //OnTextChangeValidation();\n        FetchRecords();\n      }\n    });\n  };\n  const ShowMessage = msgText => {\n    setMessage(msgText);\n    window.setTimeout(() => {\n      setMessage(\"\");\n    }, 3000);\n    debugger;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"productid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"productid\",\n                value: prod.productid,\n                onChange: OnTextChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"producttitle\",\n                value: prod.producttitle,\n                onChange: OnTextChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"price\",\n                value: prod.price,\n                onChange: OnTextChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"stock\",\n                value: prod.stock,\n                onChange: OnTextChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: Update,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 9\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: OnTextChangeValidation,\n                children: \"AddRecord\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"productid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"producttitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"myClass\",\n          children: prods.map(prod => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: prod.productid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: prod.producttitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: prod.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"mystock\",\n                children: isValidDateValue(prod.stock)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => Remove(prod.productid),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: () => Edit(prod.productid),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 10\n              }, this)]\n            }, prod.productid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 3\n  }, this);\n}\n_s(Productlist, \"LZdhv5mpHtfrn4CvpT19JEv8ZHI=\");\n_c = Productlist;\nexport default Productlist;\n// \"axios\": \"^1.4.0\",\n// \"bootstrap\": \"^3.3.7\",\n\n//files validation\n//delete ke liye user validation\nvar _c;\n$RefreshReg$(_c, \"Productlist\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","Productlist","_s","prods","setProds","prod","setProd","productid","producttitle","price","stock","message","setMessage","url","FetchRecords","get","then","result","data","isValidDateValue","console","log","Remove","window","confirm","delete","affectedRows","undefined","Update","updateurl","put","OnTextChange","args","prod1","target","name","value","Edit","i","length","copyOfProdsToEdit","OnTextChangeValidation","ShowMessage","AddRecord","post","msgText","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","map","id","_c","$RefreshReg$"],"sources":["/home/sunbeam/Assignment/WPT_Assignment/MERN/react/myreactapp/src/Product.js"],"sourcesContent":["//  import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function Product() {\n//     const url = \"http://127.0.0.1:5000/product\";\n//     const [products, setProducts] = useState([]);\n//     const [AddRecords, setAddRecords] = useState(false);\n//     const [product ,setProduct]=useState({producttitle:\"\",price:\"\",stock:\"\"});\n//     const AddProduct = () => {\n//         setAddRecords(!AddRecords);\n//     };\n\n//     const RemovedRecord = (productid) => {\n//         const confirmation = window.confirm(\"Are you sure you want to delete this product?\");\n//         if (confirmation) {\n//             axios.delete(url + \"/\" + productid).then((result) => {\n//                 if (result.data.affectedRows !== undefined && result.data.affectedRows > 0) {\n//                     FetchRecord();\n//                 }\n//             });\n//         }\n//     };\n\n//     const FetchRecord = () => {\n//         axios.get(url).then((result) => {\n//             setProducts(result.data);\n//         });\n//     };\n\n//     const OnTextChange = (args) => {\n//         var product1 = { ...product };\n//         product1[args.target.name] = args.target.value;\n//         setProduct(product1);\n//     };\n\n//     const AddRecord = () => {\n//         const isAnyFieldNotEmpty = Object.values(product).some(value => value.trim() !== '');\n    \n//         if (isAnyFieldNotEmpty) {\n//             alert('Please make sure all fields are blank before adding a new record.');\n//             return;\n//         }\n    \n//         axios.post(url, product).then((result) => {\n//             if (result.data.affectedRows !== undefined && result.data.affectedRows > 0) {\n//                 setProduct({ producttitle: \"\", price: \"\", stock: \"\" }); \n//                 FetchRecord();\n//                 setAddRecords(false);\n//             }\n//         });\n//     };\n    \n//     useEffect(() => {\n//         FetchRecord();\n//     }, []);\n\n//     return (\n//         <div className='container'>\n//             {!AddRecords ? (\n//                 <div className='table-responsive'>\n//                     <table className='table table-bordered'>\n//                         <thead>\n//                             <tr>\n//                                 <th>ProductID</th>\n//                                 <th>ProductTitle</th>\n//                                 <th>Price</th>\n//                                 <th>Stock</th>\n//                                 <th>Actions</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {products.map((product) => (\n//                                 <tr\n//                                     key={product.productid}\n//                                     className={product.stock === 0 ? 'table-danger' : 'table-info'}\n//                                 >\n//                                     <td>{product.productid}</td>\n//                                     <td>{product.producttitle}</td>\n//                                     <td>{product.price}</td>\n//                                     <td>{product.stock === 0 ? 'Not Available' : product.stock}</td>\n//                                     <td>\n//                                         <button className=\"btn btn-danger\" onClick={() => RemovedRecord(product.productid)}>Delete</button>\n//                                     </td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                     <button className=\"btn btn-primary\" onClick={AddProduct}>\n//                         Add Product\n//                     </button>\n//                 </div>\n//             ) : (\n//                 <div>\n//                     <h2>Add Product</h2>\n//                     <table className='table table-bordered'>\n//                         <tbody>\n//                             <tr>\n//                                 <td>Product Title:</td>\n//                                 <td>\n//                                     <input\n//                                         type=\"text\"\n//                                         name=\"producttitle\"\n//                                         value={product.producttitle}\n//                                         onChange={OnTextChange}\n//                                     />\n//                                 </td>\n//                             </tr>\n//                             <tr>\n//                                 <td>Price:</td>\n//                                 <td>\n//                                     <input\n//                                         type=\"text\"\n//                                         name=\"price\"\n//                                         value={product.price}\n//                                         onChange={OnTextChange}\n//                                     />\n//                                 </td>\n//                             </tr>\n//                             <tr>\n//                                 <td>Stock:</td>\n//                                 <td>\n//                                     <input\n//                                         type=\"text\"\n//                                         name=\"stock\"\n//                                         value={product.stock}\n//                                         onChange={OnTextChange}\n//                                     />\n//                                 </td>\n//                             </tr>\n//                             <tr>\n//                                 <td></td>\n//                                 <td>\n//                                     <button className=\"btn btn-primary\" onClick={AddRecord}>\n//                                         Add Record\n//                                     </button>\n//                                     <button className=\"btn btn-secondary\" onClick={AddProduct}>\n//                                         Cancel\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Product;\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./common.css\";\nfunction Productlist() {\n\tconst [prods, setProds] = useState([]);\n\tconst [prod, setProd] = useState({\n\t\tproductid: \"\",\n\t\tproducttitle: \"\",\n\t\tprice: \"\",\n\t\tstock: \"\",\n\t});\n\tconst [message, setMessage] = useState(\"\");\n\n\tconst url = \"http://127.0.0.1:5000/product\";\n\n\tconst FetchRecords = () => {\n\t\taxios.get(url).then((result) => {\n\t\t\t//debugger;\n\t\t\tsetProds(result.data);\n\t\t});\n\t\t// console.log(result.data);\n\t};\n\tconst isValidDateValue = (stock) => {\n\t\tif (stock === 0) {\n\t\t\treturn \"Not available\";\n\t\t} else {\n\t\t\treturn stock;\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tFetchRecords();\n\t}, []);\n\tuseEffect(() => {\n\t\tconsole.log(\"Some State change did update the UI\");\n\t}, [prods, prod, message]);\n\t//\n\tconst Remove = (productid) => {\n\t\tif (window.confirm(\"Do you Really want to delete this row \" + productid)) {\n\t\t\t// txt = \"You pressed OK!\";\n\t\t\taxios.delete(url + \"/\" + productid).then((result) => {\n\t\t\t\tif (\n\t\t\t\t\tresult.data.affectedRows !== undefined &&\n\t\t\t\t\tresult.data.affectedRows > 0\n\t\t\t\t) {\n\t\t\t\t\t//ShowMessage(\"Record removed successfully!\");\n\t\t\t\t\tFetchRecords();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// let txt = \"You\"\n\t\t}\n\t};\n\tconst Update = () => {\n\t\tconst updateurl = url + \"/\" + prod.productid;\n\t\tconsole.log(updateurl);\n\t\tconsole.log(prod);\n\t\taxios.put(updateurl, prod).then((result) => {\n\t\t\tFetchRecords();\n\t\t});\n\t};\n\tconst OnTextChange = (args) => {\n\t\tvar prod1 = { ...prod };\n\t\tprod1[args.target.name] = args.target.value;\n\t\tsetProd(prod1);\n\t};\n\tconst Edit = (productid) => {\n\t\tfor (var i = 0; i < prods.length; i++) {\n\t\t\tif (prods[i].productid === productid) {\n\t\t\t\tvar copyOfProdsToEdit = { ...prods[i] };\n\t\t\t\tsetProd(copyOfProdsToEdit);\n\t\t\t}\n\t\t}\n\t};\n\tconst OnTextChangeValidation = (args) => {\n\t\tvar prod1 = { ...prod };\n\t\tif (\n\t\t\tprod1.productid === 0 ||\n\t\t\tprod1.producttitle === \"\" ||\n\t\t\tprod1.price === \"\" ||\n\t\t\tprod1.stock === \"\"\n\t\t) {\n\t\t\tdebugger;\n\t\t\tShowMessage(\"Invalid Credentials\");\n\t\t\t// console.log(\"hi im success\");\n\t\t} else {\n\t\t\tAddRecord();\n\t\t}\n\t};\n\tconst AddRecord = () => {\n\t\taxios.post(url, prod).then((result) => {\n\t\t\tif (\n\t\t\t\tresult.data.affectedRows !== undefined &&\n\t\t\t\tresult.data.affectedRows > 0\n\t\t\t) {\n\t\t\t\t// ClearBoxes();\n\t\t\t\t// ShowMessage(\"Record added successfully!\");\n\t\t\t\t//OnTextChangeValidation();\n\t\t\t\tFetchRecords();\n\t\t\t}\n\t\t});\n\t};\n\tconst ShowMessage = (msgText) => {\n\t\tsetMessage(msgText);\n\t\twindow.setTimeout(() => {\n\t\t\tsetMessage(\"\");\n\t\t}, 3000);\n\t\tdebugger;\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<hr></hr>\n\n\t\t\t{/* <button className=\"btn btn primary\" onClick={FetchRecords}>\n\t\t\t\tGetProductList\n\t\t\t</button> */}\n\t\t\t<div className=\"table-responsive\">\n\t\t\t\t<table className=\"table table-bordered\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>productid</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"productid\"\n\t\t\t\t\t\t\t\t\tvalue={prod.productid}\n\t\t\t\t\t\t\t\t\tonChange={OnTextChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Name</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"producttitle\"\n\t\t\t\t\t\t\t\t\tvalue={prod.producttitle}\n\t\t\t\t\t\t\t\t\tonChange={OnTextChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>price</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\t\t\tvalue={prod.price}\n\t\t\t\t\t\t\t\t\tonChange={OnTextChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>stock</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"stock\"\n\t\t\t\t\t\t\t\t\tvalue={prod.stock}\n\t\t\t\t\t\t\t\t\tonChange={OnTextChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{/* <button className=\"btn btn-primary\" onClick={AddRecord}>\n\t\t\t\t\t\t\t\t\tAdd Record\n\t\t\t\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t\t\t\t<button className=\"btn btn-info\" onClick={ClearBoxes}>\n\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t</button>{\" \"} */}\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={Update}>\n\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\"\n\t\t\t\t\t\t\t\t\tonClick={OnTextChangeValidation}>\n\t\t\t\t\t\t\t\t\tAddRecord\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<hr></hr>\n\t\t\t<div className=\"alert alert-success\">{message}</div>\n\t\t\t<hr></hr>\n\t\t\t<div className=\"table-responsive\">\n\t\t\t\t<table className=\"table table-bordered\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<th>productid</th>\n\t\t\t\t\t\t<th>producttitle</th>\n\t\t\t\t\t\t<th>price</th>\n\t\t\t\t\t\t<th>stock</th>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody className=\"myClass\">\n\t\t\t\t\t\t{prods.map((prod) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr key={prod.productid}>\n\t\t\t\t\t\t\t\t\t<td>{prod.productid}</td>\n\t\t\t\t\t\t\t\t\t<td>{prod.producttitle}</td>\n\t\t\t\t\t\t\t\t\t<td>{prod.price}</td>\n\t\t\t\t\t\t\t\t\t<td id=\"mystock\">{isValidDateValue(prod.stock)}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => Remove(prod.productid)}>\n\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => Edit(prod.productid)}>\n\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default Productlist;\n// \"axios\": \"^1.4.0\",\n// \"bootstrap\": \"^3.3.7\",\n\n//files validation\n//delete ke liye user validation"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}